// <auto-generated />
using System;
using Forum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forum.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240606233355_Initial1")]
    partial class Initial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forum.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TopicId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            Content = "Esaa Chemi KomentariN1",
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1079),
                            TopicId = 1,
                            UpdatedAt = new DateTime(2024, 6, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Content = "Esaa Chemi KomentariN2",
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1082),
                            TopicId = 2,
                            UpdatedAt = new DateTime(2024, 3, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Content = "Esaa Chemi KomentariN3",
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1084),
                            TopicId = 3,
                            UpdatedAt = new DateTime(2023, 6, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Content = "Esaa Chemi KomentariN4",
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1086),
                            TopicId = 2,
                            UpdatedAt = new DateTime(2023, 6, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Forum.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1049),
                            State = 1,
                            Status = 1,
                            TopicName = "TopicN1",
                            UpdatedAt = new DateTime(2024, 6, 6, 23, 33, 55, 298, DateTimeKind.Utc).AddTicks(1050)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1052),
                            State = 1,
                            Status = 1,
                            TopicName = "TopicN2",
                            UpdatedAt = new DateTime(2024, 6, 7, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1056),
                            State = 1,
                            Status = 1,
                            TopicName = "TopicN3",
                            UpdatedAt = new DateTime(2024, 6, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(1058),
                            State = 1,
                            Status = 1,
                            TopicName = "TopicN4",
                            UpdatedAt = new DateTime(2024, 6, 6, 23, 33, 55, 298, DateTimeKind.Utc).AddTicks(1059)
                        });
                });

            modelBuilder.Entity("Forum.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(894),
                            Email = "UserN1@gmail.com",
                            IsAdmin = false,
                            IsBanned = false,
                            Password = "123123",
                            UserName = "UserN1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(907),
                            Email = "UserN2@gmail.com",
                            IsAdmin = false,
                            IsBanned = false,
                            Password = "123123",
                            UserName = "UserN2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(909),
                            Email = "UserN3@gmail.com",
                            IsAdmin = false,
                            IsBanned = false,
                            Password = "123123",
                            UserName = "UserN3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 7, 3, 33, 55, 298, DateTimeKind.Local).AddTicks(911),
                            Email = "UserN4@gmail.com",
                            IsAdmin = false,
                            IsBanned = false,
                            Password = "123123",
                            UserName = "UserN4"
                        });
                });

            modelBuilder.Entity("Forum.Entities.Comment", b =>
                {
                    b.HasOne("Forum.Entities.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum.Entities.Topic", "Topic")
                        .WithMany("Comments")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Forum.Entities.Topic", b =>
                {
                    b.HasOne("Forum.Entities.User", "Author")
                        .WithMany("Topics")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Forum.Entities.Topic", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Forum.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
